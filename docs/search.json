[
  {
    "objectID": "DELETE-LATER/practice.html",
    "href": "DELETE-LATER/practice.html",
    "title": "Here is my level one header",
    "section": "",
    "text": "Here is my level one header\nHere is my first paragraph\nHere is my second paragraph, where you can read more about MEDS.\nThis is very important text!"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Blog",
    "section": "",
    "text": "Exploring the Effect of Wildfire and AQI on Asthma\n\n\n\n\n\n\nHaylee Oyler\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThomas Fire AQI and Burn Scar\n\n\n\nEnvironmental-Health\n\n\nPython\n\n\nMEDS\n\n\nEDS-220\n\n\n\nExploring the environmental and health effects of the 2017 Thomas Fire\n\n\n\nHaylee Oyler\n\n\nDec 7, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Haylee Oyler",
    "section": "",
    "text": "Haylee Oyler has always been interested in studying the intersection of people and nature. She graduated with honors from the University of California, Berkeley in 2021 with a degree in Environmental Science. There, she worked on multiple research projects about human-environment interactions. Haylee’s first introduction to working with large data was her senior thesis. She used open-access data from the platform eBird to analyze trends in citizen science participation during the COVID-19 pandemic. She was captivated by the power and scope of community-centered data and became even more intrigued by questions of access, equity, and representation in who contributes to the data.\nNow, Haylee is a Master of Environmental Data Science student at the University of California Santa Barbara. She is excited to apply data science tools to study human-environment interactions, specifically issues of environmental justice, equitable climate change transitions, and community-based conservation. Her ethos for approaching environmental problems centers first and foremost on people, particularly the participation and experience of marginalized groups."
  },
  {
    "objectID": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html",
    "href": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html",
    "title": "Thomas Fire AQI and Burn Scar",
    "section": "",
    "text": "Image credits: LA Daily News\nAuthor: Haylee Oyler\nThis project contains two analyses of the 2017 Thomas Fire in Santa Barbara and Ventura Counties.\n\nPart 1: Visualizing AQI during the 2017 Thomas Fire in Santa Barbara County uses air quality index data to examine the change in air quality before and after the fire.\nPart 2: False Color Imagery of the 2017 Thomas Fire uses geospatial Landsat and fire perimeter data to create a false color map of the residual fire scar.\n\nAdditional information can be found at the GitHub repository for this project."
  },
  {
    "objectID": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html#import-aqi-data-and-explore",
    "href": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html#import-aqi-data-and-explore",
    "title": "Thomas Fire AQI and Burn Scar",
    "section": "Import AQI data and explore",
    "text": "Import AQI data and explore\nWe’ll start by importing our air quality index data for 2017 and 2018 and conducting a prelimnary exploration.\n\n# Read in AQI data for both years\naqi_17 = pd.read_csv('https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2017.zip', \n                    compression = 'zip')\n\naqi_18 = pd.read_csv('https://aqs.epa.gov/aqsweb/airdata/daily_aqi_by_county_2018.zip', \n                    compression = 'zip')\n\n\n# View the first few rows of aqi 2017\naqi_17.head(3)\n\n\n\n\n\n\n\n\nState Name\ncounty Name\nState Code\nCounty Code\nDate\nAQI\nCategory\nDefining Parameter\nDefining Site\nNumber of Sites Reporting\n\n\n\n\n0\nAlabama\nBaldwin\n1\n3\n2017-01-01\n28\nGood\nPM2.5\n01-003-0010\n1\n\n\n1\nAlabama\nBaldwin\n1\n3\n2017-01-04\n29\nGood\nPM2.5\n01-003-0010\n1\n\n\n2\nAlabama\nBaldwin\n1\n3\n2017-01-10\n25\nGood\nPM2.5\n01-003-0010\n1\n\n\n\n\n\n\n\n\n# View the first few rows of aqi 2018\naqi_18.head(3)\n\n\n\n\n\n\n\n\nState Name\ncounty Name\nState Code\nCounty Code\nDate\nAQI\nCategory\nDefining Parameter\nDefining Site\nNumber of Sites Reporting\n\n\n\n\n0\nAlabama\nBaldwin\n1\n3\n2018-01-02\n42\nGood\nPM2.5\n01-003-0010\n1\n\n\n1\nAlabama\nBaldwin\n1\n3\n2018-01-05\n45\nGood\nPM2.5\n01-003-0010\n1\n\n\n2\nAlabama\nBaldwin\n1\n3\n2018-01-08\n20\nGood\nPM2.5\n01-003-0010\n1\n\n\n\n\n\n\n\n\n# View unique defining paramters of the aqi data \naqi_17['Defining Parameter'].unique()\n\narray(['PM2.5', 'Ozone', 'NO2', 'PM10', 'CO'], dtype=object)\n\n\n\n# View the info of the aqi data\naqi_17.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 326801 entries, 0 to 326800\nData columns (total 10 columns):\n #   Column                     Non-Null Count   Dtype \n---  ------                     --------------   ----- \n 0   State Name                 326801 non-null  object\n 1   county Name                326801 non-null  object\n 2   State Code                 326801 non-null  int64 \n 3   County Code                326801 non-null  int64 \n 4   Date                       326801 non-null  object\n 5   AQI                        326801 non-null  int64 \n 6   Category                   326801 non-null  object\n 7   Defining Parameter         326801 non-null  object\n 8   Defining Site              326801 non-null  object\n 9   Number of Sites Reporting  326801 non-null  int64 \ndtypes: int64(4), object(6)\nmemory usage: 24.9+ MB\n\n\nOur AQI data contains information about the state and county location, date, and air quality index. We can also see that the defining parameter of air pollution is either PM 2.5, ozone, NO2, PM10, or CO. Additionally, our AQI data has no missing values and 4 of our variables are type int64 and 6 are type object. Something notable about these data types is that our Date column is not being recognized as a datetime object. We will fix this later on…"
  },
  {
    "objectID": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html#clean-the-aqi-data",
    "href": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html#clean-the-aqi-data",
    "title": "Thomas Fire AQI and Burn Scar",
    "section": "Clean the AQI data",
    "text": "Clean the AQI data\nCurrently, our AQI data is housed in two separate data frames. We will join them together using the pandas function pd.concat() and save them as one data frame named aqi.\nNOTE: When we concatenate data frames without any extra parameters specified in pd.concat(), the indices are simply stacked on top of one another. Therefore, the resuling index values of aqi will not match the length of the new data frame.\n\n# Bind 2017 and 2018 AQI data together\naqi = pd.concat([aqi_17, aqi_18])\naqi\n\n\n\n\n\n\n\n\nState Name\ncounty Name\nState Code\nCounty Code\nDate\nAQI\nCategory\nDefining Parameter\nDefining Site\nNumber of Sites Reporting\n\n\n\n\n0\nAlabama\nBaldwin\n1\n3\n2017-01-01\n28\nGood\nPM2.5\n01-003-0010\n1\n\n\n1\nAlabama\nBaldwin\n1\n3\n2017-01-04\n29\nGood\nPM2.5\n01-003-0010\n1\n\n\n2\nAlabama\nBaldwin\n1\n3\n2017-01-10\n25\nGood\nPM2.5\n01-003-0010\n1\n\n\n3\nAlabama\nBaldwin\n1\n3\n2017-01-13\n40\nGood\nPM2.5\n01-003-0010\n1\n\n\n4\nAlabama\nBaldwin\n1\n3\n2017-01-16\n22\nGood\nPM2.5\n01-003-0010\n1\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n327538\nWyoming\nWeston\n56\n45\n2018-12-27\n36\nGood\nOzone\n56-045-0003\n1\n\n\n327539\nWyoming\nWeston\n56\n45\n2018-12-28\n35\nGood\nOzone\n56-045-0003\n1\n\n\n327540\nWyoming\nWeston\n56\n45\n2018-12-29\n35\nGood\nOzone\n56-045-0003\n1\n\n\n327541\nWyoming\nWeston\n56\n45\n2018-12-30\n31\nGood\nOzone\n56-045-0003\n1\n\n\n327542\nWyoming\nWeston\n56\n45\n2018-12-31\n35\nGood\nOzone\n56-045-0003\n1\n\n\n\n\n654344 rows × 10 columns\n\n\n\nNotice that our data frame dimensions of 654344 rows by 10 columns do not match the last row index of 327542. To address our confusing index, we will change the index of our data frame to the date column.\nFirst, we will ensure that our Date column is a pandas datetime object. Then, we will set our index to the Date column.\n\n# Convert date to a datetime object\naqi.Date = pd.to_datetime(aqi.Date)\n\n# Set the index to our datetime to make visualizing easier later on\naqi = aqi.set_index('Date')\naqi.head(3)\n\n\n\n\n\n\n\n\nState Name\ncounty Name\nState Code\nCounty Code\nAQI\nCategory\nDefining Parameter\nDefining Site\nNumber of Sites Reporting\n\n\nDate\n\n\n\n\n\n\n\n\n\n\n\n\n\n2017-01-01\nAlabama\nBaldwin\n1\n3\n28\nGood\nPM2.5\n01-003-0010\n1\n\n\n2017-01-04\nAlabama\nBaldwin\n1\n3\n29\nGood\nPM2.5\n01-003-0010\n1\n\n\n2017-01-10\nAlabama\nBaldwin\n1\n3\n25\nGood\nPM2.5\n01-003-0010\n1\n\n\n\n\n\n\n\nNext, we will clean the column names of our new data frame. We will make all the column names lower snake case via the operations below. Here is a step-by-step of what the functions do:\n\naqi.columns = (aqi.columns selects the columns from the aqi data frame and reassigns them to the original data frame\n.str.lower() uses the string operator to make all the letters lower case\n.str.replace(' ','_') converts the output of the lower case columns to a string and replaces all spaces with an underscore\n) closes the method chaining\nprint(aqi.columns, '\\n') lets us view the output of our modified column names\n\n\n# Initial column names: notice caps and spaces\nprint(aqi.columns, '\\n')\n\n# Simplify column names\naqi.columns = (aqi.columns\n                  .str.lower()\n                  .str.replace(' ','_')\n                )\nprint(aqi.columns, '\\n')\n\nIndex(['State Name', 'county Name', 'State Code', 'County Code', 'AQI',\n       'Category', 'Defining Parameter', 'Defining Site',\n       'Number of Sites Reporting'],\n      dtype='object') \n\nIndex(['state_name', 'county_name', 'state_code', 'county_code', 'aqi',\n       'category', 'defining_parameter', 'defining_site',\n       'number_of_sites_reporting'],\n      dtype='object')"
  },
  {
    "objectID": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html#filter-aqi-data",
    "href": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html#filter-aqi-data",
    "title": "Thomas Fire AQI and Burn Scar",
    "section": "Filter AQI data",
    "text": "Filter AQI data\nFor this specific analysis, we’re only interested in the air quality Santa Barbara County. We will filter our data frame to Santa Barbara and drop columns with unnecessary information.\n\n# Filter data to Santa Barbara county \naqi_sb = aqi[aqi['county_name'] == 'Santa Barbara']\n\n# Drop the columns we're not interested in working with\naqi_sb = aqi_sb.drop(['state_name', 'county_name', 'state_code', 'county_code'], axis=1)\naqi_sb.head(3)\n\n\n\n\n\n\n\n\naqi\ncategory\ndefining_parameter\ndefining_site\nnumber_of_sites_reporting\n\n\nDate\n\n\n\n\n\n\n\n\n\n2017-01-01\n39\nGood\nOzone\n06-083-4003\n12\n\n\n2017-01-02\n39\nGood\nPM2.5\n06-083-2011\n11\n\n\n2017-01-03\n71\nModerate\nPM10\n06-083-4003\n12"
  },
  {
    "objectID": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html#aqi-rolling-average",
    "href": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html#aqi-rolling-average",
    "title": "Thomas Fire AQI and Burn Scar",
    "section": "AQI rolling average",
    "text": "AQI rolling average\nIn the next cell we will calculate an average over a rolling window using the rolling()method for pandas.Series:\n\nrolling() is a lazy method, so we need to specify what we want to calculate over each window before it does something.\nin this example we use the aggregator function mean() to calculate the average over each window\nthe parameter ‘5D’ indicates we want the window for our rolling average to be 5 days.\nwe get a pandas.Series as ouput\n\n\n# Calculate AQI rolling average over 5 days\nrolling_average = aqi_sb['aqi'].rolling(window='5D').mean()\n\n\n# Append our rolling average to our original data frame\naqi_sb['five_day_average'] = rolling_average"
  },
  {
    "objectID": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html#plot-aqi-during-the-thomas-fire",
    "href": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html#plot-aqi-during-the-thomas-fire",
    "title": "Thomas Fire AQI and Burn Scar",
    "section": "Plot AQI during the Thomas Fire",
    "text": "Plot AQI during the Thomas Fire\nNow that our data frame contains all the correct, necessary information, we can visualize it using matplotlib\n\n\nPlot the AQI\n# Initialize an empty figure (fig) and axis (ax)\nfig, ax = plt.subplots()\n\n# Visualize air quality during the Thomas Fire\naqi_sb.aqi.plot(ax=ax, label = 'AQI') # daily aqi\naqi_sb.five_day_average.plot(ax=ax, label = \"Five day AQI average\") # five day average aqi\n\n# Show the date of the Thomas fire\nplt.axvline(x = '2017-12-04', \n            color = 'red', \n            linestyle = 'dashed', \n            label = \"Thomas Fire\")\n\n# Customize the plot\nax.set_title('Daily AQI and 5-day AQI averages during the\\nThomas Fire in Santa Barbara County')\nax.set_xlabel('Date')\nax.set_ylabel('AQI')\nax.legend()\n\n# Display the figure\nplt.show()\n\n\n\n\n\n\n\n\n\nThis plot shows the drastic spike in AQI shortly after the thomas fire in December of 2017. The daily AQI peaks at just over 300, which is into the hazardous classification, and the five day average AQI is around 220, which is in the unhealthy classification. Widlfire’s are known to release many harmful chemicals and particulates that contribute to worsening air quality. This in turn leads to worsening health outcomes for illnesses such as respiratory disease, heart disease, asthma, and more."
  },
  {
    "objectID": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html#about-1",
    "href": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html#about-1",
    "title": "Thomas Fire AQI and Burn Scar",
    "section": "About",
    "text": "About\n\nPurpose\nPart 2 of this analysis details the steps to visualize Landsat multispectral geospatial data for the 2017 Thomas Fire. The Thomas Fire, which burned over 280,000 acres in Ventura and Santa Barbara counties in December 2017, was one of California’s largest wildfires at the time. It caused widespread ecological damage, displaced communities, and left lasting environmental impacts.\nFalse color imagery, created using satellite data from instruments like Landsat, is a useful tool for monitoring wildfire impacts. By assigning infrared bands to visible colors, these images highlight vegetation health, burn severity, and the extent of fire scars. This approach helps researchers and land managers assess recovery efforts, identify high-risk areas, and plan restoration strategies.\nPart 2 will create a false color image of the Thomas Fire using remote sensing data, highlighting the fire scar and exploring how coding and data visualization support environmental monitoring.\n\n\nHighlights\n\nImport Thomas fire perimeter data with geopandas and os\nImport Landsat data with rioxarray and os\nExplore and clean geospatial data with pandas and rioxarray\nConstruct a true color image of the Thomas Fire with matplotlib\nConstruct a false color image of the Thomas Fire with matplotlib\nVisualize the Thomas Fire false color scar with the fire perimeter data using matplotlib\n\n\n\nAbout the Data\nThe Landsat data is a simplified collection of bands (red, green, blue, near-infrared and shortwave infrared) from the Landsat Collection 2 Level-2 atmospherically corrected surface reflectance data, collected by the Landsat 8 satellite. It was pre-processed in the Microsoft Planetary data catalogue to remove data outside land and coarsen the spatial resolution\nThe Thomas Fire perimeter data comes from CalFire’s data portal. CalFire is the department of forestry and fire protection. They have a Geodatabase of all historical fire perimeters in the state of California from 1878 until present. The database includes information on the fire date, managing agency, cause, acres, and the geospatial boundary of the fire, among other information. This data was pre-processed to select only the Thomas fire boundary geometry.\n\n\nReferences\n\nLandsat Data from Microsoft’s Planetary Computer Data Catalogue.\n\nEarth Resources Observation and Science (EROS) Center. (2020). Landsat 4-5 Thematic Mapper Level-2, Collection 2. U.S. Geological Survey. https://doi.org/10.5066/P9IAXOVV\nEarth Resources Observation and Science (EROS) Center. (2020). Landsat 7 Enhanced Thematic Mapper Plus Level-2, Collection 2. U.S. Geological Survey. https://doi.org/10.5066/P9C7I13B\nEarth Resources Observation and Science (EROS) Center. (2020). Landsat 8-9 Operational Land Imager / Thermal Infrared Sensor Level-2, Collection 2. U.S. Geological Survey. https://doi.org/10.5066/P9OGBGM6\n\nCalFire Fire Perimeter Data\n\nCalifornia Department of Forestry and Fire Protection (CAL FIRE), [calfire_all.gdb], [2024-11-17], retrieved from CAL FIRE data portal.\n\n\n\n\nAcknowledgements\nAll materials were created by Carmen Galaz-Garcia for EDS-220: Working with Environmental Data."
  },
  {
    "objectID": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html#import-geospatial-data-and-explore",
    "href": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html#import-geospatial-data-and-explore",
    "title": "Thomas Fire AQI and Burn Scar",
    "section": "Import geospatial data and explore",
    "text": "Import geospatial data and explore\n\n# Import landsat nc data\nlandsat = rioxr.open_rasterio(os.path.join('data',\n                                    'landsat8-2018-01-26-sb-simplified.nc')\n                                    )\n\n# Import fire perimeter data\nthomas_boundary = gpd.read_file(os.path.join('data',\n                                    'thomas_boundary.geojson')\n                                    )\n\n\n# View the landsat data\nlandsat\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.Dataset&gt; Size: 25MB\nDimensions:      (band: 1, x: 870, y: 731)\nCoordinates:\n  * band         (band) int64 8B 1\n  * x            (x) float64 7kB 1.213e+05 1.216e+05 ... 3.557e+05 3.559e+05\n  * y            (y) float64 6kB 3.952e+06 3.952e+06 ... 3.756e+06 3.755e+06\n    spatial_ref  int64 8B 0\nData variables:\n    red          (band, y, x) float64 5MB ...\n    green        (band, y, x) float64 5MB ...\n    blue         (band, y, x) float64 5MB ...\n    nir08        (band, y, x) float64 5MB ...\n    swir22       (band, y, x) float64 5MB ...xarray.DatasetDimensions:band: 1x: 870y: 731Coordinates: (4)band(band)int641array([1])x(x)float641.213e+05 1.216e+05 ... 3.559e+05axis :Xcrs :EPSG:32611long_name :x coordinate of projectionresolution :30standard_name :projection_x_coordinateunits :metre_FillValue :nanarray([121305., 121575., 121845., ..., 355395., 355665., 355935.])y(y)float643.952e+06 3.952e+06 ... 3.755e+06axis :Ycrs :EPSG:32611long_name :y coordinate of projectionresolution :-30standard_name :projection_y_coordinateunits :metre_FillValue :nanarray([3952395., 3952125., 3951855., ..., 3755835., 3755565., 3755295.])spatial_ref()int640crs_wkt :PROJCS[\"WGS 84 / UTM zone 11N\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-117],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"32611\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984projected_crs_name :WGS 84 / UTM zone 11Ngrid_mapping_name :transverse_mercatorlatitude_of_projection_origin :0.0longitude_of_central_meridian :-117.0false_easting :500000.0false_northing :0.0scale_factor_at_central_meridian :0.9996spatial_ref :PROJCS[\"WGS 84 / UTM zone 11N\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-117],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"32611\"]]GeoTransform :121170.0 270.0 0.0 3952530.0 0.0 -270.0array(0)Data variables: (5)red(band, y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]green(band, y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]blue(band, y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]nir08(band, y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]swir22(band, y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]Indexes: (3)bandPandasIndexPandasIndex(Index([1], dtype='int64', name='band'))xPandasIndexPandasIndex(Index([121305.0, 121575.0, 121845.0, 122115.0, 122385.0, 122655.0, 122925.0,\n       123195.0, 123465.0, 123735.0,\n       ...\n       353505.0, 353775.0, 354045.0, 354315.0, 354585.0, 354855.0, 355125.0,\n       355395.0, 355665.0, 355935.0],\n      dtype='float64', name='x', length=870))yPandasIndexPandasIndex(Index([3952395.0, 3952125.0, 3951855.0, 3951585.0, 3951315.0, 3951045.0,\n       3950775.0, 3950505.0, 3950235.0, 3949965.0,\n       ...\n       3757725.0, 3757455.0, 3757185.0, 3756915.0, 3756645.0, 3756375.0,\n       3756105.0, 3755835.0, 3755565.0, 3755295.0],\n      dtype='float64', name='y', length=731))Attributes: (0)\n\n\n\n\nLandsat info\n# Examine raster attributes using rio accessor\nprint('Height: ', landsat.rio.height)\nprint('Width: ', landsat.rio.width, '\\n')\n\nprint('Spatial bounding box: ')\nprint(landsat.rio.bounds(), '\\n')\n\nprint('CRS: ', landsat.rio.crs)\n\n\nHeight:  731\nWidth:  870 \n\nSpatial bounding box: \n(121170.0, 3755160.0, 356070.0, 3952530.0) \n\nCRS:  EPSG:32611\n\n\n\nLandsat data description\nOur Landsat data contains the variables red, green, blue, nir08, and swir22. These are different bands of our lansat data. The dimensions of our data for each band are an (x,y) coordinate of projection of (870, 731). The CRS is EPSG: 32611 and the height and width of the data are 731 and 870. Each variable in our dataset contains the dimensions (band, y, x).\n\nthomas_boundary.head()\n\n\n\n\n\n\n\n\nyear\nstate\nagency\nunit_id\nfire_name\ninc_num\nirwinid\nalarm_date\ncont_date\nc_method\ncause\nobjective\ncomplex_name\ncomplex_id\ncomments\nfire_num\nshape_length\nshape_area\ngeometry\n\n\n\n\n0\n2017.0\nCA\nUSF\nVNC\nTHOMAS\n00003583\n\n2017-12-04 00:00:00+00:00\n2018-01-12 00:00:00+00:00\n7.0\n9.0\n1.0\nNone\nNone\nCONT_DATE based on Inciweb\nNone\n445282.444798\n1.140367e+09\nMULTIPOLYGON (((34867.386 -396856.457, 34819.3...\n\n\n\n\n\n\n\n\nthomas_boundary.info()\n\n&lt;class 'geopandas.geodataframe.GeoDataFrame'&gt;\nRangeIndex: 1 entries, 0 to 0\nData columns (total 19 columns):\n #   Column        Non-Null Count  Dtype              \n---  ------        --------------  -----              \n 0   year          1 non-null      float64            \n 1   state         1 non-null      object             \n 2   agency        1 non-null      object             \n 3   unit_id       1 non-null      object             \n 4   fire_name     1 non-null      object             \n 5   inc_num       1 non-null      object             \n 6   irwinid       1 non-null      object             \n 7   alarm_date    1 non-null      datetime64[ms, UTC]\n 8   cont_date     1 non-null      datetime64[ms, UTC]\n 9   c_method      1 non-null      float64            \n 10  cause         1 non-null      float64            \n 11  objective     1 non-null      float64            \n 12  complex_name  0 non-null      object             \n 13  complex_id    0 non-null      object             \n 14  comments      1 non-null      object             \n 15  fire_num      0 non-null      object             \n 16  shape_length  1 non-null      float64            \n 17  shape_area    1 non-null      float64            \n 18  geometry      1 non-null      geometry           \ndtypes: datetime64[ms, UTC](2), float64(6), geometry(1), object(10)\nmemory usage: 284.0+ bytes\n\n\n\nthomas_boundary.crs\n\n&lt;Projected CRS: EPSG:3310&gt;\nName: NAD83 / California Albers\nAxis Info [cartesian]:\n- X[east]: Easting (metre)\n- Y[north]: Northing (metre)\nArea of Use:\n- name: United States (USA) - California.\n- bounds: (-124.45, 32.53, -114.12, 42.01)\nCoordinate Operation:\n- name: California Albers\n- method: Albers Equal Area\nDatum: North American Datum 1983\n- Ellipsoid: GRS 1980\n- Prime Meridian: Greenwich\n\n\n\n\nFire perimeter data description\nThis fire perimeter data comes from CalFire and includes data for all fire perimeters from 1878 to 2023. It has data on the year, the fire name, the reporting agency, the cause, duration, among other data. The CRS is NAD83 California Albers and it is a projected CRS (EPSG:3310)"
  },
  {
    "objectID": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html#clean-the-landsat-data",
    "href": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html#clean-the-landsat-data",
    "title": "Thomas Fire AQI and Burn Scar",
    "section": "Clean the Landsat data",
    "text": "Clean the Landsat data\n\n# Remove the band dimension and variable\nlandsat = landsat.squeeze().drop_vars('band')\n\n# Confirm it was removed correctly\nlandsat\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.Dataset&gt; Size: 25MB\nDimensions:      (x: 870, y: 731)\nCoordinates:\n  * x            (x) float64 7kB 1.213e+05 1.216e+05 ... 3.557e+05 3.559e+05\n  * y            (y) float64 6kB 3.952e+06 3.952e+06 ... 3.756e+06 3.755e+06\n    spatial_ref  int64 8B 0\nData variables:\n    red          (y, x) float64 5MB ...\n    green        (y, x) float64 5MB ...\n    blue         (y, x) float64 5MB ...\n    nir08        (y, x) float64 5MB ...\n    swir22       (y, x) float64 5MB ...xarray.DatasetDimensions:x: 870y: 731Coordinates: (3)x(x)float641.213e+05 1.216e+05 ... 3.559e+05axis :Xcrs :EPSG:32611long_name :x coordinate of projectionresolution :30standard_name :projection_x_coordinateunits :metre_FillValue :nanarray([121305., 121575., 121845., ..., 355395., 355665., 355935.])y(y)float643.952e+06 3.952e+06 ... 3.755e+06axis :Ycrs :EPSG:32611long_name :y coordinate of projectionresolution :-30standard_name :projection_y_coordinateunits :metre_FillValue :nanarray([3952395., 3952125., 3951855., ..., 3755835., 3755565., 3755295.])spatial_ref()int640crs_wkt :PROJCS[\"WGS 84 / UTM zone 11N\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-117],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"32611\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984projected_crs_name :WGS 84 / UTM zone 11Ngrid_mapping_name :transverse_mercatorlatitude_of_projection_origin :0.0longitude_of_central_meridian :-117.0false_easting :500000.0false_northing :0.0scale_factor_at_central_meridian :0.9996spatial_ref :PROJCS[\"WGS 84 / UTM zone 11N\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",-117],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"32611\"]]GeoTransform :121170.0 270.0 0.0 3952530.0 0.0 -270.0array(0)Data variables: (5)red(y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]green(y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]blue(y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]nir08(y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]swir22(y, x)float64...add_offset :0.0coordinates :timescale_factor :1.0_FillValue :0.0[635970 values with dtype=float64]Indexes: (2)xPandasIndexPandasIndex(Index([121305.0, 121575.0, 121845.0, 122115.0, 122385.0, 122655.0, 122925.0,\n       123195.0, 123465.0, 123735.0,\n       ...\n       353505.0, 353775.0, 354045.0, 354315.0, 354585.0, 354855.0, 355125.0,\n       355395.0, 355665.0, 355935.0],\n      dtype='float64', name='x', length=870))yPandasIndexPandasIndex(Index([3952395.0, 3952125.0, 3951855.0, 3951585.0, 3951315.0, 3951045.0,\n       3950775.0, 3950505.0, 3950235.0, 3949965.0,\n       ...\n       3757725.0, 3757455.0, 3757185.0, 3756915.0, 3756645.0, 3756375.0,\n       3756105.0, 3755835.0, 3755565.0, 3755295.0],\n      dtype='float64', name='y', length=731))Attributes: (0)"
  },
  {
    "objectID": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html#visualize-the-thomas-fire-with-true-color-imagery",
    "href": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html#visualize-the-thomas-fire-with-true-color-imagery",
    "title": "Thomas Fire AQI and Burn Scar",
    "section": "Visualize the Thomas Fire with true color imagery",
    "text": "Visualize the Thomas Fire with true color imagery\n\n# First attempt to visualize the landsat data \nlandsat[['red', 'green', 'blue']].to_array().plot.imshow()\n\n\n\n\n\n\n\n\nOur first attempt to map the data didn’t go quite as planned. Let’s true adjusting the robust parameter of .imshow() and see what happens\n\n# Visualize the landsat data using true color imagery\nlandsat[['red', 'green', 'blue']].to_array().plot.imshow(robust=True)\n\n\n\n\n\n\n\n\nAfter we adjusted the scale for plotting the bands, we got a much more comprehensible image. The clouds were throwing off the scale for plotting. The robust=True argument allows us infer a different set vmin and vmax values to properly color the image. It takes out the 2nd and 98th percentile, removing outliers which makes it easier to visualize.\nNext, we will use false color imagery to view the fire…"
  },
  {
    "objectID": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html#visualize-the-thomas-fire-with-false-color-imagery",
    "href": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html#visualize-the-thomas-fire-with-false-color-imagery",
    "title": "Thomas Fire AQI and Burn Scar",
    "section": "Visualize the Thomas Fire with false color imagery",
    "text": "Visualize the Thomas Fire with false color imagery\nTo make the Thomas Fire burn scar more visible, we will use false color imagery by assigning short-wave infrared radiation to red, near infrared to green, and red to blue.\n\n# Visualize the landsat data using false color imagery\nlandsat[['swir22', 'nir08', 'red']].to_array().plot.imshow(robust=True)"
  },
  {
    "objectID": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html#map-the-thomas-fire-scar-and-boundary",
    "href": "posts/2024-12-01-thomas-fire/thomas-fire-analysis.html#map-the-thomas-fire-scar-and-boundary",
    "title": "Thomas Fire AQI and Burn Scar",
    "section": "Map the Thomas Fire scar and boundary",
    "text": "Map the Thomas Fire scar and boundary\n\n\nReproject CRS\n# Reproject data to match the CRS between our two datasets\nthomas_boundary= thomas_boundary.to_crs(\"EPSG:4326\")\nlandsat = landsat.rio.reproject(\"EPSG:4326\")\n\n# Confirm that the CRS of our data match\nassert landsat.rio.crs == thomas_boundary.crs\n\n\n\n\nMap the Thomas Fire\n# Initialize figure\nfig, ax = plt.subplots()\n\n# Plot the landsat data\nlandsat[['swir22', 'nir08', 'red']].to_array().plot.imshow(ax = ax, \n                                                        robust = True)\n\n# Plot the fire perimeter\nthomas_boundary.boundary.plot(ax=ax, \n                            edgecolor='#f83c36', \n                            linewidth=2, \n                            label='Thomas Fire Boundary')\n\n# Create a legend for the false color bands and boundary\nlegend_swir = mpatches.Patch(color = \"#eb6a4b\", label = 'Shortwave Infrared \\n - Burned Area')\nlegend_nir = mpatches.Patch(color = \"#a1fc81\", label = 'Near Infrared \\n - Vegetation')\nlegend_bound = mpatches.Patch(color = \"#f83c36\", label = 'Thomas Fire Boundary')\n\n# Plot legend\nax.legend(handles = [legend_swir, legend_nir, legend_bound], loc = 'upper right', fontsize = 10)\n\n# Set title and axes labels\nax.set_title('False Color Map of the 2017 Thomas Fire in California\\nwith the Fire Perimeter',\n            fontsize=14)\nax.set_xlabel('Longitude (degrees)')\nax.set_ylabel('Latitude (degrees)')\n\nplt.show()\n\n\n\n\n\n\n\n\n\nFigure Description\nThis map shows a false color image of the Thomas Fire in Santa Barbara and Ventura Counties. The fire boundary is outlined in red. Satellite data works with wavelengths of light beyond what the human eye can see. False color imagery is the process of assigning colors to these wavelengths (i.e. near-infrared and short-wave infrared). In our map, we’ve chosen to visualize short-wave infrared as red, near-infrared as green, and red wavelengths as blue. This lets us produce an image that highlights exactly where the fire scar is, as opposed to the true color image where you it is much harder to distinguish. A true color image assigns the red, green, and blue wavelengths of light to the correct corresponding colors."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "about.html#what-i-do-for-work",
    "href": "about.html#what-i-do-for-work",
    "title": "About",
    "section": "What I do for work",
    "text": "What I do for work\n\nsome text goes here"
  },
  {
    "objectID": "about.html#what-i-do-for-fun",
    "href": "about.html#what-i-do-for-fun",
    "title": "About",
    "section": "What I do for fun",
    "text": "What I do for fun\n\nfun stuff\n\nhere is some midgreen text\nhere is a midgreen text\n\nhere is a line\nhere is a another line"
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Resources",
    "section": "",
    "text": "hello world"
  },
  {
    "objectID": "posts/2024-12-13-asthma-aqi/asthma-aqi.html",
    "href": "posts/2024-12-13-asthma-aqi/asthma-aqi.html",
    "title": "Exploring the Effect of Wildfire and AQI on Asthma",
    "section": "",
    "text": "Asthma affects an estimated 262 million people and is the most common chronic disease among children. It is caused by inflammation in the small airways of the lungs that leads to wheezing, coughing, and shortness of breath. While inhaled medications can manage effectively manage symptoms, if left untreated, asthma attacks can be fatal. In fact, over 450,000 people died from asthma worldwide in 2019.\nMany things can trigger asthma symptoms. One example is fine particulate matter (PM). Scientists measure PM at two scales, PM 10 and PM 2.5, where the number refers to the size of the particles in micrograms. PM 2.5 is especially concerning for people with respiratory conditions such as asthma because its small size means it can get into even the narrowest of airways, causing irritation and inflammation.\nPM 2.5 can come from many sources, from industrial pollution to car exhaust, but recent research has shown that PM 2.5 from wildfires is particularly harmful. As wildfire regimes get more more volatile and extreme under climate change, more people will be exposed to these harmful particles.\nWhile it is difficult to directly measure PM 2.5 from wildfires, one useful proxy for wildfire air pollution is air quality. The Air Quality Index (AQI) is a measure of how polluted the air is. It uses a number of sources to\n\n\nLoad libraries\nlibrary(tidyverse)\nlibrary(here)\nlibrary(janitor)\nlibrary(tmap)\nlibrary(sf)\nlibrary(spatialreg)\nlibrary(stargazer)\nlibrary(patchwork)\nlibrary(sjPlot)\nlibrary(sjmisc)\nlibrary(sjlabelled)\n\n\n\n\n\nasthma_aqi &lt;- read_sf(here(\"posts\", \"2024-12-13-asthma-aqi\", \"data\",  \"asthma_aqi.geojson\"))\n\nfire_asthma &lt;- read_csv(here(\"posts\", \"2024-12-13-asthma-aqi\", \"data\",  \"fire_asthma.csv\"))"
  },
  {
    "objectID": "posts/2024-12-13-asthma-aqi/asthma-aqi.html#introduction",
    "href": "posts/2024-12-13-asthma-aqi/asthma-aqi.html#introduction",
    "title": "Exploring the Effect of Wildfire and AQI on Asthma",
    "section": "",
    "text": "Asthma affects an estimated 262 million people and is the most common chronic disease among children. It is caused by inflammation in the small airways of the lungs that leads to wheezing, coughing, and shortness of breath. While inhaled medications can manage effectively manage symptoms, if left untreated, asthma attacks can be fatal. In fact, over 450,000 people died from asthma worldwide in 2019.\nMany things can trigger asthma symptoms. One example is fine particulate matter (PM). Scientists measure PM at two scales, PM 10 and PM 2.5, where the number refers to the size of the particles in micrograms. PM 2.5 is especially concerning for people with respiratory conditions such as asthma because its small size means it can get into even the narrowest of airways, causing irritation and inflammation.\nPM 2.5 can come from many sources, from industrial pollution to car exhaust, but recent research has shown that PM 2.5 from wildfires is particularly harmful. As wildfire regimes get more more volatile and extreme under climate change, more people will be exposed to these harmful particles.\nWhile it is difficult to directly measure PM 2.5 from wildfires, one useful proxy for wildfire air pollution is air quality. The Air Quality Index (AQI) is a measure of how polluted the air is. It uses a number of sources to\n\n\nLoad libraries\nlibrary(tidyverse)\nlibrary(here)\nlibrary(janitor)\nlibrary(tmap)\nlibrary(sf)\nlibrary(spatialreg)\nlibrary(stargazer)\nlibrary(patchwork)\nlibrary(sjPlot)\nlibrary(sjmisc)\nlibrary(sjlabelled)\n\n\n\n\n\nasthma_aqi &lt;- read_sf(here(\"posts\", \"2024-12-13-asthma-aqi\", \"data\",  \"asthma_aqi.geojson\"))\n\nfire_asthma &lt;- read_csv(here(\"posts\", \"2024-12-13-asthma-aqi\", \"data\",  \"fire_asthma.csv\"))"
  }
]